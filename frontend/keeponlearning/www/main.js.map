{"version":3,"sources":["./src/app/components/cart-details/cart-details.component.html","./src/app/components/cart-details/cart-details.component.ts","./src/app/services/offer.service.ts","./src/environments/environment.ts","./src/app/components/offer-details/offer-details.component.ts","./src/app/components/offer-details/offer-details.component.html","./src/app/common/cart-item.ts","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/reg.ts","./src/app/components/participants-list/participants-list.component.html","./src/app/components/participants-list/participants-list.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/common/offer.ts","./src/app/components/cart-status/cart-status.component.ts","./src/app/components/cart-status/cart-status.component.html","./src/app/app.module.ts","./src/app/components/logindetails/logindetails.component.ts","./src/app/components/logindetails/logindetails.component.html","./src/app/services/cart.service.ts","./src/app/components/registerdetails/registerdetails.component.ts","./src/app/components/registerdetails/registerdetails.component.html","./src/app/validators/keep-on-learning-validators.ts","./src/app/services/register.service.ts","./src/app/components/offer-list/offer-list.component.ts","./src/app/components/offer-list/offer-list-grid.component.html","./src/app/components/course-status/course-status.component.ts","./src/app/components/course-status/course-status.component.html","./src/app/components/offer-category-menu/offer-category-menu.component.html","./src/app/components/offer-category-menu/offer-category-menu.component.ts","./src/app/components/course/course.component.ts","./src/app/components/course/course.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class =\"main-content\">\r\n    <div class=\"section-content section-content-p30\">\r\n        <div class=\"container-fluid\">\r\n            <div *ngIf=\"cartItems.length > 0\">\r\n\r\n            <table class=\"table table-bordered\">\r\n                <tr>\r\n                    <th width=\"20%\">Course Image</th>\r\n                    <th width=\"30%\">Course Detail</th>\r\n                    <th width=\"35%\">Description</th>\r\n                    <th width=\"15%\">Remove the course</th>\r\n                </tr>\r\n\r\n                <tr *ngFor=\"let tempCartItem of cartItems\">\r\n                    <td>\r\n                        <img src=\"{{ tempCartItem.imageUrl }}\" class=\"img-responsive\" width=\"150px\" />\r\n                    </td>\r\n                    <td>\r\n                        <p>Course: {{ tempCartItem.name }} </p>\r\n                        <p>Professor name: {{ tempCartItem.professorName }} </p>\r\n                        <p>Participants: {{ tempCartItem.participants }} </p>\r\n                        <a routerLink=\"/checkout\" class=\"btn btn-primary\">Checkout</a>\r\n                    </td>\r\n                    <td>\r\n                        <p>{{ tempCartItem.description }} </p>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <button (click)=\"remove(tempCartItem)\" class=\"btn btn-primary btn-sm mt-2\">Remove</button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <div *ngIf=\"cartItems.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\r\n            Enroll to a course first.\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  styleUrls: ['./cart-details.component.css']\r\n})\r\nexport class CartDetailsComponent implements OnInit {\r\n\r\n  cartItems: CartItem[] = [];\r\n  totalQuantity: number = 0;\r\n\r\n  constructor(private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listCartDetails();\r\n  }\r\n  listCartDetails() {\r\n    //get a hundle to the cart items\r\n    this.cartItems = this.cartService.cartItems;\r\n    \r\n    //subscribe to the cart totalQuantity\r\n    this.cartService.totalQuantity.subscribe(\r\n      data => this.totalQuantity = data\r\n    );\r\n\r\n    //compute cart total quantity\r\n    this.cartService.computeCartTotals();\r\n  }\r\n\r\n  remove(theCartItem:CartItem){\r\n    this.cartService.remove(theCartItem);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Offer } from '../common/offer';\r\nimport { map } from 'rxjs/operators'\r\nimport {OfferCategory} from \"../common/offer-category\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfferService {\r\n\r\n\r\n  private baseUrl = 'http://localhost:8081/api/offers';\r\n  private categoryUrl = 'http://localhost:8081/api/offer-category'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getOfferList(theCategoryId: number): Observable<Offer[]>{\r\n  //build URL based on category id\r\n    const searchUrl=`${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`;\r\n\r\n    return this.getOffers(searchUrl);\r\n  }\r\n\r\n  getOfferListPaginate(thePage: number, \r\n                       thePageSize: number, \r\n                       theCategoryId: number): Observable<GetResponseOffers> {\r\n                         \r\n      const searchUrl=`${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`\r\n                       + `&page=${thePage}&size=${thePageSize}`;\r\n      \r\n      return this.httpClient.get<GetResponseOffers>(searchUrl);\r\n    }\r\n\r\n  getOfferCategories(): Observable<OfferCategory[]> {\r\n    return this.httpClient.get<GetResponseOfferCategory>(this.categoryUrl).pipe(\r\n      map(response => response._embedded.offerCategory)\r\n    );\r\n  }\r\n\r\n  getOffer(theOfferId: number): Observable<Offer>{\r\n    const offerUrl = `${this.baseUrl}/${theOfferId}`;\r\n    return this.httpClient.get<Offer>(offerUrl);\r\n  }\r\n\r\n  searchOffers(theKeyword: string): Observable<Offer[]> {\r\n    //build URL based on keyword\r\n    const searchUrl=`${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`;\r\n    return this.getOffers(searchUrl);\r\n  }\r\n\r\n  searchOffersPaginate(thePage: number, \r\n                       thePageSize: number, \r\n                       theKeyword: string): Observable<GetResponseOffers> {\r\n      \r\n const searchUrl=`${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`;\r\n                + `&page=${thePage}&size=${thePageSize}`;\r\n\r\n return this.httpClient.get<GetResponseOffers>(searchUrl);\r\n }\r\n\r\n\r\n  private getOffers(searchUrl: string) {\r\n    return this.httpClient.get<GetResponseOffers>(searchUrl).pipe(\r\n      map(response => response._embedded.offers)\r\n    );\r\n  }\r\n}\r\n\r\ninterface GetResponseOffers{\r\n  _embedded: {\r\n    offers: Offer[];\r\n  },\r\n  page: {\r\n    size: number,\r\n    totalElements: number,\r\n    totalPages: number,\r\n    number: number\r\n  }\r\n}\r\n\r\ninterface GetResponseOfferCategory{\r\n  _embedded: {\r\n    offerCategory: OfferCategory[];\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\nimport { Offer } from 'src/app/common/offer';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { OfferService } from 'src/app/services/offer.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-details',\r\n  templateUrl: './offer-details.component.html',\r\n  styleUrls: ['./offer-details.component.css']\r\n})\r\n\r\nexport class OfferDetailsComponent implements OnInit {\r\n\r\n  offer: Offer = new Offer();\r\n\r\n  constructor(private offerService: OfferService,\r\n              private cartService: CartService,\r\n              private route: ActivatedRoute,\r\n              private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(() => {\r\n      this.handleProductDetails();\r\n    })\r\n  }\r\n\r\n  handleProductDetails() {\r\n\r\n    // get the \"id\" param string. convert string to a number using the \"+\" symbol\r\n    const theOfferId: number = +this.route.snapshot.paramMap.get('id');\r\n\r\n    this.offerService.getOffer(theOfferId).subscribe(\r\n      data => {\r\n        this.offer = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  addToCourses() {\r\n    console.log(`Added ${this.offer.name}`);\r\n    const theCartItem = new CartItem(this.offer);\r\n    this.cartService.addToCourses(theCartItem);\r\n  }\r\n\r\n\r\n  showParticipants() {\r\n    this.router.navigateByUrl(`/participants-list`);\r\n  }\r\n}\r\n","<div class=\"detail-section\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <img src=\"{{ offer.imageUrl }}\" class=\"detail-img\">\r\n\r\n        <h3>{{ offer.name }}</h3>\r\n        <div class=\"Number of students\">Number of students: {{ offer.participants }}</div>\r\n        <button (click)=\"addToCourses()\" class=\"btn btn-primary btn-sm\">Enroll to course</button>\r\n      <br>\r\n      <br>\r\n      <button (click)=\"showParticipants()\"  class=\"btn btn-primary btn-sm\"> <a routerLink=\"/participants-list\"></a> Show Participants</button>\r\n        <hr>\r\n        <h4>Course description</h4>\r\n        <p>{{ offer.description }}</p>\r\n\r\n        <a routerLink=\"/products\" class=\"mt-5\">Back to Offer List</a>\r\n    </div>\r\n</div>\r\n","import { Offer } from \"./offer\";\r\n\r\nexport class CartItem {\r\n    id: string;\r\n    name: string;\r\n    imageUrl: string;\r\n    participants: number;\r\n    professorName: string;\r\n    quantity: number;\r\n    description: string;\r\n\r\n    constructor(offer: Offer){\r\n        this.id = offer.id;\r\n        this.name = offer.name;\r\n        this.imageUrl = offer.imageUrl;\r\n        this.participants = offer.participants;\r\n        this.description = offer.description;\r\n        this.professorName = offer.professorName;\r\n\r\n        this.quantity = 1;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {KeepOnLearningValidators} from \"../../validators/keep-on-learning-validators\";\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  checkoutFormGroup: FormGroup;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkoutFormGroup=this.formBuilder.group({\r\n      customer: this.formBuilder.group({\r\n        firstName: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace]),\r\n        lastName: new FormControl('',[Validators.required,Validators.minLength(2),KeepOnLearningValidators.notOnlyWhitespace]),\r\n        email: new FormControl('', [Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])\r\n      })\r\n    });\r\n  }\r\n\r\n  get firstName() { return this.checkoutFormGroup.get('customer.firstName'); }\r\n  get lastName() { return this.checkoutFormGroup.get('customer.lastName'); }\r\n  get email() { return this.checkoutFormGroup.get('customer.email'); }\r\n\r\n  onSubmit(){\r\n    console.log(\"handling the submit button\");\r\n\r\n    if(this.checkoutFormGroup.invalid){\r\n      this.checkoutFormGroup.markAllAsTouched();\r\n    }\r\n\r\n    console.log(this.checkoutFormGroup.get('customer').value);\r\n    console.log(\"The emial address is\" + this.checkoutFormGroup.get('customer').value.email);\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"'section-content section-content-p30\">\r\n    <div class=\"container-fluid\">\r\n      <form [formGroup]=\"checkoutFormGroup\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- student form group -->\r\n        <div formGroupName=\"customer\" class=\"form-area\">\r\n        <h3>Student</h3>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>First Name</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"firstName\" type=\"text\">\r\n\r\n                <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"firstName.errors.required  || firstName.errors.notOnlyWhitespace\">\r\n                    First Name is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"firstName.errors.minlength\">\r\n                    First Name must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Last Name</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"lastName\" type=\"text\">\r\n\r\n                <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"lastName.errors.required || lastName.errors.notOnlyWhitespace\">\r\n                    Last Name is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"lastName.errors.minlength\">\r\n                    Last Name must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Email</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"email\" type=\"text\">\r\n\r\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"email.errors.pattern\">\r\n                    Email must be a valid email adress\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <!-- submit button-->\r\n        <div class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  doSearch(value: string){\r\n    console.log(`value=${value}`);\r\n    this.router.navigateByUrl(`/search/${value}`);\r\n  }\r\n\r\n}\r\n","<div class=\"form-header\" >\r\n  <input #myInput type=\"text\"\r\n          placeholder=\"Search a course...\"\r\n          class=\"au-input au-input-xl\" type=\"text\"\r\n          (keyup.enter)=\"doSearch(myInput.value)\"/>\r\n\r\n  <button (click)=\"doSearch(myInput.value)\" class=\"au-btn-submit\" type=\"submit\">\r\n    Search\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'keeponlearning';\r\n}\r\n","<div class=\"page-wrapper\">\r\n\r\n  <!-- MENU SIDEBAR-->\r\n  <aside class=\"menu-sidebar d-none d-lg-block\">\r\n    <div class=\"logo\">\r\n      <a routerLink=\"/offers\">\r\n        <img src=\"assets/images/logo.png\" alt=\"keeponlearning\" class=\"img-responsive\">\r\n      </a>\r\n    </div>\r\n\r\n    <app-offer-category-menu></app-offer-category-menu>\r\n\r\n\r\n  </aside>\r\n  <!-- END MENU SIDEBAR-->\r\n\r\n  \t\t<!-- PAGE CONTAINER-->\r\n      <div class=\"page-container\">\r\n        <!-- HEADER DESKTOP-->\r\n        <header class=\"header-desktop\">\r\n          <div class=\"section-content section-content-p30\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"header-wrap\">\r\n\r\n                <app-search></app-search>\r\n                <app-login></app-login>\r\n\r\n                <app-register></app-register>\r\n                <app-course-status></app-course-status>\r\n                <app-cart-status></app-cart-status>\r\n\r\n              </div>\r\n              <div class=\"account-wrap\"></div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <!-- END HEADER DESKTOP-->\r\n\r\n        \t\t\t<!-- MAIN CONTENT-->\r\n        <router-outlet></router-outlet>\r\n\r\n\r\n\r\n\r\n        </div>\r\n  </div>\r\n\r\n\r\n<!-- ENDS PAGE CONTAINER -->\r\n<footer>\r\n\t\t<ul>\r\n\t\t\t<li><a href=\"#\">About Us</a></li>\r\n\t\t\t<li><a href=\"#\">Contact Us</a></li>\r\n\t\t\t<li><a href=\"#\">Help</a></li>\r\n\t\t</ul>\r\n\t</footer>\r\n","import {User} from \"./user\";\r\n\r\nexport class Reg {\r\n  user: User;\r\n}\r\n","<br><br><br>\r\n<br><br><br>\r\n<h1>Users</h1>\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n  <tr>\r\n    <th style=\"width: 30%\">Username</th>\r\n    <th style=\"width: 30%\">Email</th>\r\n    <th style=\"width: 30%\">Role</th>\r\n    <th style=\"width: 10%\"></th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let user of users\">\r\n    <td>{{user.username}}</td>\r\n    <td>{{user.email}}</td>\r\n    <td>{{user.role}}</td>\r\n\r\n  </tr>\r\n  <tr *ngIf=\"!users\">\r\n    <td colspan=\"4\" class=\"text-center\">\r\n      <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {User} from \"../../common/user\";\r\nimport {Offer} from \"../../common/offer\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-participants-list',\r\n  templateUrl: './participants-list.component.html',\r\n  styleUrls: ['./participants-list.component.css']\r\n})\r\nexport class ParticipantsListComponent implements OnInit {\r\n  users;\r\n  //offers: Array<Offer> = [];\r\n  constructor(private router: Router,private http:HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n\r\n  }\r\n\r\n\r\n  private getAll() {\r\n    this.http.get<any>(`http://localhost:8081/api/users`)\r\n      .subscribe(\r\n        (response) =>{\r\n          console.log(`ceva : ${response._embedded.users}`);\r\n          this.users=response._embedded.users;\r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        }\r\n\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  doSearch() {\r\n    this.router.navigateByUrl(`/logindetails`);\r\n  }\r\n}\r\n","<div>\r\n\r\n\r\n    <button (click)=\"doSearch()\" class=\"au-btn-submit\" type=\"submit\">\r\n      <a routerLink=\"/logindetails\"></a>\r\n      Login\r\n    </button>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  doSearch() {\r\n    this.router.navigateByUrl(`/registerdetails`);\r\n  }\r\n}\r\n","<div>\r\n\r\n\r\n  <button (click)=\"doSearch()\" class=\"au-btn-submit\" type=\"submit\">\r\n    <a routerLink=\"/registerdetails\"></a>\r\n    Register\r\n  </button>\r\n\r\n</div>\r\n","export class Offer {\r\n    id: string;\r\n    professorName: string;\r\n    name: string;\r\n    description: string;\r\n    participants: number;\r\n    imageUrl: string;\r\n    active: boolean;\r\n    placesAvailable: number;\r\n    dateCreated: Date;\r\n    lastUpdated: Date;\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-status',\r\n  templateUrl: './cart-status.component.html',\r\n  styleUrls: ['./cart-status.component.css']\r\n})\r\nexport class CartStatusComponent implements OnInit {\r\n\r\n  totalQuantity: number = 0;\r\n\r\n  constructor(private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateCartStatus();\r\n  }\r\n  updateCartStatus() {\r\n    //subscribe to the cart totalQuantity\r\n    this.cartService.totalQuantity.subscribe(\r\n      data => this.totalQuantity = data\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"cart-area d-n\">\r\n    <a routerLink=\"/cart-details\">\r\n      <div class=\"total\">New courses \r\n          <span>{{ totalQuantity }}</span> \r\n        </div> \r\n        <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n    </a>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { OfferListComponent } from './components/offer-list/offer-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { OfferService } from './services/offer.service'\r\nimport {Routes, RouterModule} from \"@angular/router\";\r\nimport { OfferCategoryMenuComponent } from './components/offer-category-menu/offer-category-menu.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { OfferDetailsComponent } from './components/offer-details/offer-details.component';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\r\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\r\nimport { CheckoutComponent } from './components/checkout/checkout.component';\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LogindetailsComponent } from './components/logindetails/logindetails.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { RegisterdetailsComponent } from './components/registerdetails/registerdetails.component';\r\nimport { ParticipantsListComponent } from './components/participants-list/participants-list.component';\r\nimport { CourseComponent } from './components/course/course.component';\r\nimport { CourseStatusComponent } from './components/course-status/course-status.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'checkout', component: CheckoutComponent},\r\n  {path: 'course', component: CourseComponent},\r\n  {path: 'course-status', component: CourseStatusComponent},\r\n  {path: 'cart-details', component: CartDetailsComponent},\r\n  {path: 'search/:keyword', component: OfferListComponent},\r\n  {path: 'offer_category/:id', component: OfferListComponent},\r\n  {path: 'offer_category', component: OfferListComponent},\r\n  {path: 'offers', component: OfferListComponent},\r\n  {path: 'offers/:id', component: OfferDetailsComponent},\r\n  {path: 'logindetails', component: LogindetailsComponent},\r\n  {path: 'registerdetails', component: RegisterdetailsComponent},\r\n  {path: 'participants-list', component: ParticipantsListComponent},\r\n  {path: '', redirectTo: '/offers',pathMatch: 'full'},\r\n  {path: '**', redirectTo: '/offers',pathMatch: 'full'}\r\n\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OfferListComponent,\r\n    OfferCategoryMenuComponent,\r\n    SearchComponent,\r\n    OfferDetailsComponent,\r\n    CartStatusComponent,\r\n    CartDetailsComponent,\r\n    CheckoutComponent,\r\n    LoginComponent,\r\n    LogindetailsComponent,\r\n    RegisterComponent,\r\n    RegisterdetailsComponent,\r\n    ParticipantsListComponent,\r\n    CourseComponent,\r\n    CourseStatusComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [OfferService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {KeepOnLearningValidators} from \"../../validators/keep-on-learning-validators\";\r\n\r\n@Component({\r\n  selector: 'app-logindetails',\r\n  templateUrl: './logindetails.component.html',\r\n  styleUrls: ['./logindetails.component.css']\r\n})\r\nexport class LogindetailsComponent implements OnInit {\r\n  loginFormGroup: FormGroup;\r\n  constructor(private router: Router,private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginFormGroup=this.formBuilder.group({\r\n      client: this.formBuilder.group({\r\n        username: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace]),\r\n        password: new FormControl('',[Validators.required,Validators.minLength(2),KeepOnLearningValidators.notOnlyWhitespace]),\r\n        email: new FormControl('', [Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\r\n        role: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace])\r\n\r\n      })\r\n    });\r\n  }\r\n\r\n  get username() { return this.loginFormGroup.get('client.username'); }\r\n  get password() { return this.loginFormGroup.get('client.password'); }\r\n  get email() { return this.loginFormGroup.get('client.email'); }\r\n  get role() { return this.loginFormGroup.get('client.role'); }\r\n\r\n\r\n  onSubmit(){\r\n    console.log(\"handling the submit button\");\r\n\r\n    if(this.loginFormGroup.invalid){\r\n      this.loginFormGroup.markAllAsTouched();\r\n    }\r\n\r\n    console.log(this.loginFormGroup.get('client').value);\r\n    console.log(\"The email address is\" + this.loginFormGroup.get('client').value.email);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"'section-content section-content-p30\">\r\n    <div class=\"container-fluid\">\r\n      <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- student form group -->\r\n        <div formGroupName=\"client\" class=\"form-area\">\r\n          <h3>User</h3>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Email</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"email\" type=\"text\">\r\n                </label>\r\n\r\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"email.errors.pattern\">\r\n                    Email must be a valid email adress\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Password</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"password\" type=\"password\">\r\n                </label>\r\n\r\n                <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"password.errors.required || password.errors.notOnlyWhitespace\">\r\n                    Password is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"password.errors.minlength\">\r\n                    Password must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <!-- submit button-->\r\n        <div class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CartItem } from '../common/cart-item';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  cartItems: CartItem[] = [];\r\n\r\n  totalCourses: Subject<number> = new Subject<number>();\r\n  totalQuantity: Subject<number> = new Subject<number>();\r\n\r\n  constructor() { }\r\n\r\n  addToCourses(theCartItem: CartItem){\r\n    //check if we already have the item in our cart\r\n    let alreadyExtistsInCart: boolean = false;\r\n    let existingCartItem: CartItem = undefined;\r\n\r\n    if(this.cartItems.length > 0) {\r\n      //find the intem in the cart based on item id\r\n\r\n      existingCartItem = this.cartItems.find( tempCartItem => tempCartItem.id === theCartItem.id);\r\n    \r\n    //check if we found it\r\n    alreadyExtistsInCart = (existingCartItem != undefined);\r\n    }\r\n\r\n    if(alreadyExtistsInCart) {\r\n      console.log(\"Already enrolled\");\r\n    }\r\n    else{\r\n      //add item to array\r\n      this.cartItems.push(theCartItem);\r\n    }\r\n\r\n    //compute total quantity\r\n    this.computeCartTotals();\r\n    }\r\n    \r\n  computeCartTotals() {\r\n    let totalQuantityValue: number = 0;\r\n    \r\n    for(let currentCartItem of this.cartItems){\r\n      totalQuantityValue += currentCartItem.quantity;\r\n    }\r\n    this.totalQuantity.next(totalQuantityValue);\r\n  }\r\n\r\n  remove(theCartItem: CartItem) {\r\n\r\n    // get index of item in the array\r\n    const itemIndex = this.cartItems.findIndex( tempCartItem => tempCartItem.id === theCartItem.id );\r\n\r\n    // if found, remove the item from the array at the given index\r\n    if (itemIndex > -1) {\r\n      this.cartItems.splice(itemIndex, 1);\r\n\r\n      this.computeCartTotals();\r\n    }\r\n  }\r\n  }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {KeepOnLearningValidators} from \"../../validators/keep-on-learning-validators\";\r\nimport {RegisterService} from \"../../services/register.service\";\r\nimport {User} from \"../../common/user\";\r\nimport {Reg} from \"../../common/reg\";\r\n\r\n@Component({\r\n  selector: 'app-registerdetails',\r\n  templateUrl: './registerdetails.component.html',\r\n  styleUrls: ['./registerdetails.component.css']\r\n})\r\nexport class RegisterdetailsComponent implements OnInit {\r\n\r\n  loginFormGroup: FormGroup;\r\n  constructor(private router: Router,private formBuilder: FormBuilder,private registerService: RegisterService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginFormGroup=this.formBuilder.group({\r\n      client: this.formBuilder.group({\r\n        username: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace]),\r\n        password: new FormControl('',[Validators.required,Validators.minLength(2),KeepOnLearningValidators.notOnlyWhitespace]),\r\n        email: new FormControl('', [Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\r\n        role: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace])\r\n\r\n      })\r\n    });\r\n  }\r\n\r\n  get username() { return this.loginFormGroup.get('client.username'); }\r\n  get password() { return this.loginFormGroup.get('client.password'); }\r\n  get email() { return this.loginFormGroup.get('client.email'); }\r\n  get role() { return this.loginFormGroup.get('client.role'); }\r\n\r\n\r\n  onSubmit(){\r\n    console.log(\"handling the submit button\");\r\n\r\n    if(this.loginFormGroup.invalid){\r\n      this.loginFormGroup.markAllAsTouched();\r\n      return;\r\n    }\r\n    let reg=new Reg();\r\n    reg.user=this.loginFormGroup.controls['client'].value;\r\n\r\n    /*\r\n    let usr=new User();\r\n\r\n    usr=this.loginFormGroup.controls['client'].value;\r\n    const ceva:User  = JSON.parse(JSON.stringify(usr));\r\n\r\n        const username: string=JSON.parse(JSON.stringify(usr.username));\r\n        const email: string=JSON.parse(JSON.stringify(usr.email));\r\n        const password: string=JSON.parse(JSON.stringify(usr.password));\r\n        const role: string=JSON.parse(JSON.stringify(usr.role));\r\n        usr.username=username;\r\n        usr.email=email;\r\n        usr.password=password;\r\n        usr.role=role;\r\n\r\n     */\r\n\r\n\r\n\r\n    this.registerService.register(reg).subscribe({\r\n      next: response =>{\r\n        alert(`Your account ${reg.user.username} is now registered`)\r\n        this.router.navigateByUrl(`/logindetails`);\r\n      },\r\n      error: err=>{\r\n        alert(`There was an error: ${err.message}`);\r\n      }\r\n    }\r\n\r\n    );\r\n\r\n    //console.log(this.loginFormGroup.get('client').value);\r\n   // console.log(\"The email address is\" + this.loginFormGroup.get('client').value.email);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"'section-content section-content-p30\">\r\n    <div class=\"container-fluid\">\r\n      <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- student form group -->\r\n        <div formGroupName=\"client\" class=\"form-area\">\r\n          <h3>User</h3>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Username</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"username\" type=\"text\">\r\n                </label>\r\n\r\n                <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"username.errors.required  || username.errors.notOnlyWhitespace\">\r\n                    Username is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"username.errors.minlength\">\r\n                    Username must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Password</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"password\" type=\"password\">\r\n                </label>\r\n\r\n                <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"password.errors.required || password.errors.notOnlyWhitespace\">\r\n                    Password is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"password.errors.minlength\">\r\n                    Password must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Email</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"email\" type=\"text\">\r\n                </label>\r\n\r\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"email.errors.pattern\">\r\n                    Email must be a valid email adress\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Role</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <label>\r\n                  <input formControlName=\"role\" type=\"text\">\r\n                </label>\r\n\r\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"role.errors.required || role.errors.notOnlyWhitespace\">\r\n                    A role is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"role.errors.minlength\">\r\n                    Last Name must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <!-- submit button-->\r\n        <div class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {FormControl, ValidationErrors} from \"@angular/forms\";\r\n\r\nexport class KeepOnLearningValidators {\r\n  //whitespace validation\r\n  static notOnlyWhitespace(control: FormControl) : ValidationErrors{\r\n    //checking if the string has only whitespaces\r\n\r\n    if((control.value!=null) && (control.value.trim().length===0)){\r\n      //invalid\r\n      return{'notOnlyWhitespace': true};\r\n    }\r\n    else {\r\n      //valid, returns null\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Register} from \"ts-node\";\r\nimport {User} from \"../common/user\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Reg} from \"../common/reg\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  private registerUrl='http://localhost:8081/api/register/registered';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  register(reg: Reg): Observable<any>  {\r\n    return this.httpClient.post<User>(this.registerUrl,reg);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Offer } from 'src/app/common/offer';\r\nimport { OfferService } from 'src/app/services/offer.service';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport { CartItem } from 'src/app/common/cart-item';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-list',\r\n\r\n  templateUrl: './offer-list-grid.component.html',\r\n\r\n  styleUrls: ['./offer-list.component.css']\r\n})\r\nexport class OfferListComponent implements OnInit {\r\n\r\n  offers: Array<Offer> = [];\r\n  currentCategoryId: number = 1;\r\n  previousCategoryId: number = 1;\r\n  searchMode: boolean = false;\r\n\r\n  //new properties for pagination\r\n  thePageNumber: number = 1;\r\n  thePageSize: number = 5;\r\n  theTotalElements: number = 0;\r\n\r\n  previousKeyword: string = null;\r\n\r\n  constructor(private offerService: OfferService,\r\n              private cartService: CartService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(() => {\r\n      this.listOffers();\r\n    });\r\n  }\r\n\r\n  listOffers(){\r\n    this.searchMode=this.route.snapshot.paramMap.has('keyword');\r\n    if(this.searchMode){\r\n      this.handleSearchOffers();\r\n    }\r\n    else\r\n    this.handleListOffers();\r\n\r\n  }\r\n\r\n  handleListOffers(){\r\n    //check if id parameter is available\r\n    const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\r\n\r\n    if(hasCategoryId){\r\n      //get the id param string. convert string to a number using the \"+\" symbol\r\n      this.currentCategoryId= +this.route.snapshot.paramMap.get('id');\r\n    }\r\n    else {\r\n      //no category id available\r\n      this.currentCategoryId=1;\r\n    }\r\n\r\n  //check if we have a different category than previous\r\n  //if we have a different category id than previous then set thePageNumber to 1\r\n\r\n  if(this.previousCategoryId != this.currentCategoryId ){\r\n    this.thePageNumber = 1;\r\n  }\r\n\r\n  this.previousCategoryId = this.currentCategoryId;\r\n\r\n    //get the offers for the given category id\r\n    this.offerService.getOfferListPaginate(this.thePageNumber - 1,\r\n                                          this.thePageSize,\r\n                                          this.currentCategoryId)\r\n                                          .subscribe(this.processResult());\r\n\r\n      }\r\n\r\n      processResult() {\r\n        return data => {\r\n          this.offers = data._embedded.offers;\r\n          this.thePageNumber = data.page.number + 1;\r\n          this.thePageSize = data.page.size;\r\n          this.theTotalElements = data.page.totalElements;\r\n        };\r\n      }\r\n\r\n      updatePageSize(pageSize: number){\r\n        this.thePageSize=pageSize;\r\n        this.thePageNumber=1;\r\n        this.listOffers();\r\n      }\r\n\r\n  private handleSearchOffers() {\r\n    const theKeyword: string = this.route.snapshot.\r\n    paramMap.get('keyword');\r\n\r\n    //if we have a different keyword than previous\r\n    //then set thePageNumber to 1\r\n\r\n    if(this.previousKeyword!=theKeyword){\r\n      this.thePageNumber=1;\r\n    }\r\n\r\n    this.previousKeyword=theKeyword;\r\n\r\n    console.log(`keyword=${theKeyword}, thePageNumber=${this.thePageNumber}`);\r\n\r\n    //search for offers using keyword\r\n    this.offerService.searchOffersPaginate(this.thePageNumber-1,\r\n      this.thePageSize,\r\n      theKeyword\r\n    ).subscribe(this.processResult());\r\n  }\r\n\r\n  addToCourses(theOffer: Offer){\r\n    console.log(`Adding  ${theOffer.name}`);\r\n\r\n    const theCartItem = new CartItem(theOffer);\r\n\r\n    this.cartService.addToCourses(theCartItem);\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class =\"section-content section-content-p30\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n\r\n                <!-- loop over the collection of offers -->\r\n                <div *ngFor=\"let tempOffer of offers\" class=\"col-md-3\">\r\n                <div class=\"product-box\">\r\n                  <a routerLink=\"/offers/{{ tempOffer.id }}\">\r\n                    <img src=\"{{ tempOffer.imageUrl }}\" class=\"img-responsive\">\r\n                    </a>\r\n                    <a routerLink=\"/offers/{{ tempOffer.id }}\">\r\n                    <h1>{{ tempOffer.name }}</h1>\r\n                    </a>\r\n                    <div class=\"participants\">Number of students: {{tempOffer.participants}}</div>\r\n                    <button (click)=\"addToCourses(tempOffer)\" class=\"btn btn-primary btn-sm\">Enroll to course</button>\r\n                </div>\r\n                </div>\r\n                      <!-- if offers is empty display message-->\r\n                      <div *ngIf=\"offers?.length==0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\r\n                        No courses found.\r\n                      </div>\r\n\r\n            </div>\r\n            <!-- begin footer-->\r\n\r\n            <div class=\"footer-pagination\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\"></div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-9\" style=\"padding-left: 30%\">\r\n                      \r\n                        <ngb-pagination [(page)]=\"thePageNumber\"\r\n                                          [pageSize]=\"thePageSize\"\r\n                                          [collectionSize]=\"theTotalElements\"\r\n                                          [maxSize]=\"5\"\r\n                                          [boundaryLinks]=\"true\"\r\n                                          (pageChange)=\"listOffers()\">\r\n                            \r\n                        </ngb-pagination>\r\n\r\n                      </div>\r\n\r\n                    <div class=\"col-md-3 mt-2\" style=\"text-align: right;\">\r\n                    \r\n                      <span class=\"mr-2\">Page Size</span>\r\n                      <select (change)=\"updatePageSize($event.target.value)\">\r\n                        <option selected=\"true\">5</option>\r\n                        <option>10</option>\r\n                        <option>20</option>\r\n                        <option>50</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- end footer-->\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-course-status',\r\n  templateUrl: './course-status.component.html',\r\n  styleUrls: ['./course-status.component.css']\r\n})\r\nexport class CourseStatusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-header\">\r\n  <a routerLink=\"/course\">Add course\r\n  </a>\r\n</div>\r\n","<div class=\"menu-sidebar-content js-scrollbar1\">\r\n  <nav class=\"navbar-sidebar\">\r\n    <ul class=\"list-unstyled navbar-list\">\r\n\r\n      <li *ngFor=\"let tempOfferCategory of offerCategories\">\r\n        <a routerLink=\"/offer_category/{{tempOfferCategory.id}}\" routerLinkActive=\"active-link\">\r\n        {{tempOfferCategory.categoryName}}\r\n        </a>\r\n      </li>\r\n\r\n    </ul>\r\n  </nav>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {OfferService} from \"../../services/offer.service\";\r\nimport {OfferCategory} from \"../../common/offer-category\";\r\n\r\n@Component({\r\n  selector: 'app-offer-category-menu',\r\n  templateUrl: './offer-category-menu.component.html',\r\n  styleUrls: ['./offer-category-menu.component.css']\r\n})\r\nexport class OfferCategoryMenuComponent implements OnInit {\r\n  offerCategories: OfferCategory[];\r\n  constructor(private offerService: OfferService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listOfferCategories();\r\n  }\r\n  listOfferCategories(){\r\n    this.offerService.getOfferCategories().subscribe(\r\n    data => {\r\n      console.log('Offer Categories=' + JSON.stringify(data));\r\n      this.offerCategories=data;\r\n    }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {KeepOnLearningValidators} from \"../../validators/keep-on-learning-validators\";\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent implements OnInit {\r\n\r\n  courseFormGroup: FormGroup;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.courseFormGroup=this.formBuilder.group({\r\n      customer: this.formBuilder.group({\r\n        courseName: new FormControl('',[Validators.required,Validators.minLength(2), KeepOnLearningValidators.notOnlyWhitespace]),\r\n        profName: new FormControl('',[Validators.required,Validators.minLength(2),KeepOnLearningValidators.notOnlyWhitespace]),\r\n        description: new FormControl(),\r\n        subject: new FormControl()\r\n      })\r\n    });\r\n  }\r\n\r\n  get courseName() { return this.courseFormGroup.get('customer.courseName'); }\r\n  get profName() { return this.courseFormGroup.get('customer.profName'); }\r\n  get description() { return this.courseFormGroup.get('customer.description'); }\r\n  get subject() { return this.courseFormGroup.get('customer.description'); }\r\n\r\n  onSubmit(){\r\n    console.log(\"handling the submit button\");\r\n\r\n    if(this.courseFormGroup.invalid){\r\n      this.courseFormGroup.markAllAsTouched();\r\n    }\r\n\r\n    console.log(this.courseFormGroup.get('customer').value);\r\n    //console.log(\"The emial address is\" + this.checkoutFormGroup.get('customer').value.email);\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"'section-content section-content-p30\">\r\n    <div class=\"container-fluid\">\r\n      <form [formGroup]=\"courseFormGroup\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- student form group -->\r\n        <div formGroupName=\"customer\" class=\"form-area\">\r\n          <h3>Teacher</h3>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Course Name</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"courseName\" type=\"text\">\r\n\r\n                <div *ngIf=\"courseName.invalid && (courseName.dirty || courseName.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"courseName.errors.required  || courseName.errors.notOnlyWhitespace\">\r\n                    Course Name is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"courseName.errors.minlength\">\r\n                    Course Name must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Professor Name</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"profName\" type=\"text\">\r\n\r\n                <div *ngIf=\"profName.invalid && (profName.dirty || profName.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"profName.errors.required || profName.errors.notOnlyWhitespace\">\r\n                    Professor Name is required\r\n                  </div>\r\n\r\n                  <div *ngIf=\"profName.errors.minlength\">\r\n                    Professor Name must be at least 2 characters long\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Description</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <input formControlName=\"description\" type=\"text\">\r\n\r\n                <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"alert alert-danger mt-1\">\r\n\r\n                  <div *ngIf=\"description.errors.required\">\r\n                    Description is required\r\n                  </div>\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\"><label>Subject</label></div>\r\n            <div class=\"col-md-9\">\r\n              <div class=\"input-space\">\r\n                <select formControlName=\"subject\">\r\n                  <option>Computer Science</option>\r\n                  <option>Mathematics</option>\r\n                  <option>Literature</option>\r\n                  <option>History</option>\r\n                  <option>Geography</option>\r\n                </select>\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <!-- submit button-->\r\n        <div class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}